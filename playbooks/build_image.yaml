---
- name: provision the cloud virtual machine host
  hosts: provision_host
  gather_facts: yes
  tags: provision_host

  tasks:
    - name: install dependencies
      yum:
        name:
          - python-pip
          - python-devel
        state: latest

    - name: Download ghw dependency
      shell: |
        go get github.com/jaypipes/ghw
        cd {{ lookup('env', 'HOME') }}/go/src/github.com/jaypipes/ghw
        dep ensure
        cd cmd/ghwc
        go build
        cp ghwc {{ lookup('env', 'WORKSPACE') }}/
  environment:
      GOPATH: "{{ lookup('env', 'HOME') }}/go"
      GOBIN: "/usr/local/go/bin"
      PATH: "{{ lookup('env', 'PATH') }}:/usr/local/go/bin"

- name: Generate fact for pubkey path
  hosts: provision_host
  gather_facts: yes
  tags: provision_host
  tasks:
    - name: Register fact for pubkey path
      set_fact:
        pubkey_path: "{{ lookup('env', 'HOME') }}/.ssh/id_rsa.pub"

- name: generate ignition file with pubkey
  hosts: provision_host
  gather_facts: yes
  tags: provision_host
  vars:
    core_pubkey: "{{ lookup('file', pubkey_path) }}"
  tasks:
    - name: Generate ignition file with pubkey
      template:
        src: templates/ssh_key.ign.j2
        dest: "{{ lookup('env', 'IGNITION_PATH') }}/ssh_key.ign"
        mode: 0644

- name: provision the virtual machines
  hosts: hosts
  gather_facts: no
  become: yes
  tags: provision_vms

  tasks:
    - name: stop and remove the cluster network
      virt_net:
        name: cluster
        command: "{{ item }}"
      with_items:
        - destroy
        - undefine
      ignore_errors: true

    - name: build and start the network virtual machines
      import_role:
        name: netlab
        tasks_from: build
      vars:
        netlab_nodes_path: "{{ playbook_dir }}/../nodes_image_build"
        netlab_files_path: "{{ playbook_dir }}/../files"

    - name: Wait for some time to get ip populated
      pause:
          seconds: 30

    - name: Retrieve IP of generated VM
      shell: |
        for mac in `virsh domiflist server01 |grep -o -E "([0-9a-f]{2}:){5}([0-9a-f]{2})"` ; do
            arp -e |grep $mac  |grep -o -P "^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}"
        done
      register: vm_ip

    - name: Add new host to inventory
      add_host:
          name: "{{ vm_ip.stdout }}"
          groups: build_host
          ansible_user: core

    - name: Wait for VM to be available
      wait_for:
          port: 22
          host: "{{ vm_ip.stdout }}"
          delay: 10

- name: Install dependencies to build VM
  hosts: build_host
  gather_facts: yes
  become: yes
  tags: build_image

  tasks:
    - name: disable selinux
      selinux:
          policy: targeted
          state: permissive

    - name: Enable /usr modification
      shell: rpm-ostree usroverlay
      ignore_errors: true

    - name: Clone coreos-dracut project
      shell: |
          podman run -ti --rm -v {{ lookup('env', 'HOME') }}:/root -v /tmp:/git alpine/git clone https://github.com/yrobla/coreos-dracut.git
      ignore_errors: true

    - name: Create needed directories
      file:
          path: "{{ item }}"
          state: directory
          mode: 0755
      with_items:
          - /tmp/isolinux
          - /tmp/genisoimage
          - /tmp/iproute
          - /usr/lib/dracut/modules.d/90coreos
          - /usr/share/syslinux

    - name: Copy module to dracut
      shell: |
          cp -R /tmp/coreos-dracut/dracut-module/* /usr/lib/dracut/modules.d/90coreos/

    - name: Install genisoimage
      shell: |
          podman run -v /tmp/genisoimage:/tmp/ -d --name genisoimage fedora:latest /bin/bash -c "dnf -y install genisoimage;cp /usr/bin/mkisofs /tmp/ ; sleep 300"
      ignore_errors: true

    - name: Wait until genisoimage file is populated
      wait_for:
          path: /tmp/genisoimage/mkisofs

    - name: And copy to the right path
      shell: |
          cp /tmp/genisoimage/mkisofs /usr/bin/

    - name: Install syslinux
      shell: |
          podman run -v /tmp/isolinux:/usr/share/syslinux/ -d --name isolinux fedora:latest /bin/bash -c "dnf -y install /usr/share/syslinux/isolinux.bin;sleep 300"
      ignore_errors: true

    - name: Wait until isolinux is populated
      wait_for:
          path: /tmp/isolinux/isolinux.bin

    - name: And copy to the right path
      shell: |
          cp -R /tmp/isolinux/* /usr/share/syslinux

    - name: Install iproute new version
      shell:
          podman run -v /tmp/iproute:/tmp/ -d --name iproute fedora:27 /bin/bash -c "dnf -y install iproute;cp /usr/sbin/ip /tmp/ ; sleep 300"
      ignore_errors: true

    - name: Wait until ip binary is populated
      wait_for:
          path: /tmp/iproute/ip

    - name: And copy to the right path
      shell: |
          cp /tmp/iproute/ip /sbin/ip

    - name: Find vmlinuz file
      shell: |
          find /boot -name vmlinuz*x86_64
      register: vmlinuz_file

    - name: And copy to boot directory
      shell: |
          cp {{ vmlinuz_file.stdout }} /boot/

    - name: Download extra libraries for geniso
      get_url:
          url: https://rpmfind.net/linux/fedora/linux/releases/27/Everything/x86_64/os/Packages/l/libusal-1.1.11-37.fc27.x86_64.rpm
          dest: /tmp/libusal.rpm
          mode: 0644

    - name: Download library needed for jq
      get_url:
          url: http://rpmfind.net/linux/fedora/linux/releases/27/Everything/x86_64/os/Packages/o/oniguruma-6.6.1-1.fc27.x86_64.rpm
          dest: /tmp/libonig.rpm

    - name: And download jq
      get_url:
          url: https://rpmfind.net/linux/fedora/linux/releases/27/Everything/x86_64/os/Packages/j/jq-1.5-8.fc27.x86_64.rpm
          dest: /tmp/jq.rpm

    - name: Install the packages
      shell: |
          rpm -i {{ item }}
      with_items:
          - /tmp/libonig.rpm
          - /tmp/jq.rpm

    - name: Extract extra libraries
      shell: |
          cd /tmp
          rpm2cpio /tmp/libusal.rpm | cpio -idmv

    - name: Copy libraries to the right path
      shell: |
          cp /tmp/usr/lib64/libusal.so.0 /usr/lib64/
          cp /tmp/usr/lib64/librols.so.0* /usr/lib64/

    - name: Execute build
      shell: |
          cd /tmp/coreos-dracut/build
          make clean && make x86_64

    - name: Add read permissions to generated images
      file:
          path: "{{ item }}"
          mode: 0644
      with_items:
          - /tmp/coreos-dracut/build/x86_64/coreos.iso
          - /tmp/coreos-dracut/build/x86_64/isolinux/initrd.img
          - /tmp/coreos-dracut/build/x86_64/isolinux/vmlinuz

    - name: Extract artifacts to workspace
      fetch:
          src: "{{ item }}"
          dest: "{{ lookup('env', 'WORKSPACE') }}/"
          flat: yes
      with_items:
          - /tmp/coreos-dracut/build/x86_64/coreos.iso
          - /tmp/coreos-dracut/build/x86_64/isolinux/initrd.img
          - /tmp/coreos-dracut/build/x86_64/isolinux/vmlinuz

