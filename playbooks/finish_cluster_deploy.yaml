---
- name: Copy cluster credentials locally
  hosts: bootstrap_host
  gather_facts: yes

  tasks:
    - name: wait for host to come up
      wait_for_connection:
        timeout: 3600

    - name: wait until credentials file is populated
      wait_for:
        path: /var/opt/openshift/auth/kubeconfig

    - name: copy credential of the cluster locally
      fetch:
        src: /var/opt/openshift/auth/kubeconfig
        dest: "{{ lookup('env', 'WORKSPACE') }}/"
        flat: true
      become: true

- name: Operate on cluster
  hosts: provision_host
  gather_facts: yes

  tasks:
    - name: Wait for master node to join
      shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl get nodes --no-headers | grep 'master' | grep 'Ready' | wc -l
      register: masters_result
      until: masters_result.stdout|int > 0

    - name: Remove taint from master
      shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl taint nodes --all node-role.kubernetes.io/master:NoSchedule-
      when: masters_result.stdout|int > 0
      ignore_errors: true

    - name: Wait for master to be fully functional
      shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl get scc --no-headers | grep 'restricted' | wc -l
      register: scc_result
      until: scc_result.stdout|int > 0
      delay: 60
      retries: 10

    - name: Remove bootstrap node from cluster
      shell: KUBECONFIG={{ lookup('env', 'WORKSPACE') }}/kubeconfig kubectl delete node testcluster-bootstrap
      ignore_errors: true

- name: Disable selinux on master
  hosts: master_host
  gather_facts: yes

  tasks:
    - name: Disable selinux
      selinux:
        policy: targeted
        state: permissive
      become: true
